                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Mon Jul 11 01:07:40 2016
                                      5 ;--------------------------------------------------------
                                      6 	.module blinky
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; Stack segment in internal ram 
                                     23 ;--------------------------------------------------------
                                     24 	.area	SSEG
      000001                         25 __start__stack:
      000001                         26 	.ds	1
                                     27 
                                     28 ;--------------------------------------------------------
                                     29 ; absolute external ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DABS (ABS)
                                     32 ;--------------------------------------------------------
                                     33 ; interrupt vector 
                                     34 ;--------------------------------------------------------
                                     35 	.area HOME
      008000                         36 __interrupt_vect:
      008000 82 00 80 83             37 	int s_GSINIT ;reset
      008004 82 00 00 00             38 	int 0x0000 ;trap
      008008 82 00 00 00             39 	int 0x0000 ;int0
      00800C 82 00 00 00             40 	int 0x0000 ;int1
      008010 82 00 00 00             41 	int 0x0000 ;int2
      008014 82 00 00 00             42 	int 0x0000 ;int3
      008018 82 00 00 00             43 	int 0x0000 ;int4
      00801C 82 00 00 00             44 	int 0x0000 ;int5
      008020 82 00 00 00             45 	int 0x0000 ;int6
      008024 82 00 00 00             46 	int 0x0000 ;int7
      008028 82 00 00 00             47 	int 0x0000 ;int8
      00802C 82 00 00 00             48 	int 0x0000 ;int9
      008030 82 00 00 00             49 	int 0x0000 ;int10
      008034 82 00 00 00             50 	int 0x0000 ;int11
      008038 82 00 00 00             51 	int 0x0000 ;int12
      00803C 82 00 00 00             52 	int 0x0000 ;int13
      008040 82 00 00 00             53 	int 0x0000 ;int14
      008044 82 00 00 00             54 	int 0x0000 ;int15
      008048 82 00 00 00             55 	int 0x0000 ;int16
      00804C 82 00 00 00             56 	int 0x0000 ;int17
      008050 82 00 00 00             57 	int 0x0000 ;int18
      008054 82 00 00 00             58 	int 0x0000 ;int19
      008058 82 00 00 00             59 	int 0x0000 ;int20
      00805C 82 00 00 00             60 	int 0x0000 ;int21
      008060 82 00 00 00             61 	int 0x0000 ;int22
      008064 82 00 00 00             62 	int 0x0000 ;int23
      008068 82 00 00 00             63 	int 0x0000 ;int24
      00806C 82 00 00 00             64 	int 0x0000 ;int25
      008070 82 00 00 00             65 	int 0x0000 ;int26
      008074 82 00 00 00             66 	int 0x0000 ;int27
      008078 82 00 00 00             67 	int 0x0000 ;int28
      00807C 82 00 00 00             68 	int 0x0000 ;int29
                                     69 ;--------------------------------------------------------
                                     70 ; global & static initialisations
                                     71 ;--------------------------------------------------------
                                     72 	.area HOME
                                     73 	.area GSINIT
                                     74 	.area GSFINAL
                                     75 	.area GSINIT
      008083                         76 __sdcc_gs_init_startup:
      008083                         77 __sdcc_init_data:
                                     78 ; stm8_genXINIT() start
      008083 AE 00 00         [ 2]   79 	ldw x, #l_DATA
      008086 27 07            [ 1]   80 	jreq	00002$
      008088                         81 00001$:
      008088 72 4F 00 00      [ 1]   82 	clr (s_DATA - 1, x)
      00808C 5A               [ 2]   83 	decw x
      00808D 26 F9            [ 1]   84 	jrne	00001$
      00808F                         85 00002$:
      00808F AE 00 00         [ 2]   86 	ldw	x, #l_INITIALIZER
      008092 27 09            [ 1]   87 	jreq	00004$
      008094                         88 00003$:
      008094 D6 80 CE         [ 1]   89 	ld	a, (s_INITIALIZER - 1, x)
      008097 D7 00 00         [ 1]   90 	ld	(s_INITIALIZED - 1, x), a
      00809A 5A               [ 2]   91 	decw	x
      00809B 26 F7            [ 1]   92 	jrne	00003$
      00809D                         93 00004$:
                                     94 ; stm8_genXINIT() end
                                     95 	.area GSFINAL
      00809D CC 80 80         [ 2]   96 	jp	__sdcc_program_startup
                                     97 ;--------------------------------------------------------
                                     98 ; Home
                                     99 ;--------------------------------------------------------
                                    100 	.area HOME
                                    101 	.area HOME
      008080                        102 __sdcc_program_startup:
      008080 CC 80 A0         [ 2]  103 	jp	_main
                                    104 ;	return from main will return to caller
                                    105 ;--------------------------------------------------------
                                    106 ; code
                                    107 ;--------------------------------------------------------
                                    108 	.area CODE
                                    109 ;	blinky.c: 3: int main() {
                                    110 ;	-----------------------------------------
                                    111 ;	 function main
                                    112 ;	-----------------------------------------
      0080A0                        113 _main:
      0080A0 52 02            [ 2]  114 	sub	sp, #2
                                    115 ;	blinky.c: 6: PD_DDR = 0xff;
      0080A2 35 FF 50 11      [ 1]  116 	mov	0x5011+0, #0xff
                                    117 ;	blinky.c: 7: PD_CR1 = 0xff;
      0080A6 35 FF 50 12      [ 1]  118 	mov	0x5012+0, #0xff
                                    119 ;	blinky.c: 9: do {
      0080AA                        120 00103$:
                                    121 ;	blinky.c: 10: PD_ODR ^= 0xff;
      0080AA AE 50 0F         [ 2]  122 	ldw	x, #0x500f
      0080AD F6               [ 1]  123 	ld	a, (x)
      0080AE 43               [ 1]  124 	cpl	a
      0080AF AE 50 0F         [ 2]  125 	ldw	x, #0x500f
      0080B2 F7               [ 1]  126 	ld	(x), a
                                    127 ;	blinky.c: 11: for(d = 0; d < 10000; d++) { 
      0080B3 90 5F            [ 1]  128 	clrw	y
      0080B5                        129 00109$:
                                    130 ;	blinky.c: 12: for (i=0; i<5;i++);
      0080B5 AE 00 05         [ 2]  131 	ldw	x, #0x0005
      0080B8 1F 01            [ 2]  132 	ldw	(0x01, sp), x
      0080BA                        133 00108$:
      0080BA 1E 01            [ 2]  134 	ldw	x, (0x01, sp)
      0080BC 5A               [ 2]  135 	decw	x
      0080BD 1F 01            [ 2]  136 	ldw	(0x01, sp), x
      0080BF 5D               [ 2]  137 	tnzw	x
      0080C0 26 F8            [ 1]  138 	jrne	00108$
                                    139 ;	blinky.c: 11: for(d = 0; d < 10000; d++) { 
      0080C2 90 5C            [ 2]  140 	incw	y
      0080C4 90 A3 27 10      [ 2]  141 	cpw	y, #0x2710
      0080C8 2F EB            [ 1]  142 	jrslt	00109$
                                    143 ;	blinky.c: 14: } while(1);
      0080CA 20 DE            [ 2]  144 	jra	00103$
      0080CC 5B 02            [ 2]  145 	addw	sp, #2
      0080CE 81               [ 4]  146 	ret
                                    147 	.area CODE
                                    148 	.area INITIALIZER
                                    149 	.area CABS (ABS)
